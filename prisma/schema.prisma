generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int                   @id @default(autoincrement())
  firstName             String?
  lastName              String?
  phoneNumber           String                @unique
  email                 String?               @unique
  password              String?               // Requis pour ADMIN et SUB_ADMIN
  role                  UserRole              @default(USER)
  isPhoneNumberVerified Boolean               @default(false)
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  mobileMoneyAccount    MobileMoneyAccount?   
  transactions          Transaction[]         
}

model Client {
  id                 Int           @id @default(autoincrement())
  firstName          String?
  lastName           String?
  phoneNumber        String        @unique
  email              String?       @unique
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  transactions       Transaction[]
}

model MobileMoneyAccount {
  id            Int              @id @default(autoincrement())
  phoneNumber   String?
  userId        Int              @unique
  user          User             @relation(fields: [userId], references: [id])
  networkId     Int
  network       Network          @relation(fields: [networkId], references: [id])
  transactions  Transaction[]    
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model Network {
  id                   Int                 @id @default(autoincrement())
  name                 String              @unique
  image                String?
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  mobileMoneyAccounts  MobileMoneyAccount[]
  transactions         Transaction[]
}

model Transaction {
  id                     Int                   @id @default(autoincrement())
  userId                 Int
  user                   User                  @relation(fields: [userId], references: [id])
  clientId               Int
  client                 Client                @relation(fields: [clientId], references: [id])
  amount                 Float
  status                 TransactionStatus     @default(PENDING)
  networkId              Int
  network                Network               @relation(fields: [networkId], references: [id])
  mobileMoneyAccountId   Int?
  mobileMoneyAccount     MobileMoneyAccount?   @relation(fields: [mobileMoneyAccountId], references: [id])
  createdAt              DateTime              @default(now())
  updatedAt              DateTime              @updatedAt
}

enum UserRole {
  ADMIN
  SUB_ADMIN
  USER
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}